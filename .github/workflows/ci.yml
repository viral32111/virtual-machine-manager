name: CI

on:
  push:
    paths:
      - '**'
    branches:
      - '**'
    tags:
      - '*.*.*'
  workflow_dispatch:

# TODO: Build for Windows/macOS/Linux (musl/glibc), and x86_64/aarch64

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        name: [ Debug, Release ]
        include:
          - name: Debug
            configuration: debug
          - name: Release
            configuration: release
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Split semantic version
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        id: split
        run: |
          echo "MAJOR_VERSION=$(echo ${{ github.ref_name }} | cut -d. -f 1)" >> $GITHUB_ENV
          echo "MINOR_VERSION=$(echo ${{ github.ref_name }} | cut -d. -f 2)" >> $GITHUB_ENV
          echo "PATCH_VERSION=$(echo ${{ github.ref_name }} | cut -d. -f 3)" >> $GITHUB_ENV

      - name: Build via Make
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        run: |
          make --jobs $(nproc) ${{ matrix.configuration }} \
            VMM_MAJOR_VERSION=${{ steps.split.outputs.MAJOR_VERSION }} \
            VMM_MINOR_VERSION=${{ steps.split.outputs.MINOR_VERSION }} \
            VMM_PATCH_VERSION=${{ steps.split.outputs.PATCH_VERSION }}

      - name: Build via Make
        if: ${{ github.ref_type != 'tag' }}
        run: make --jobs $(nproc) ${{ matrix.configuration }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.configuration }}
          path: build/${{ matrix.configuration }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    permissions:
      contents: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: release
          path: build

      - name: Rename build artifact
        run: find build/release -type f -exec mv --verbose {} vmm-${{ github.ref_name }}-linux-amd64-glibc \;

      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: vmm-${{ github.ref_name }}-linux-amd64-glibc
          token: ${{ secrets.GITHUB_TOKEN }}
